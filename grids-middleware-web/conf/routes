# Routes
# This file defines all application routes (Higher priority routes first)
# https://www.playframework.com/documentation/latest/ScalaRouting

GET  /data/:userID                                                              org.clulab.grids.webapp.controllers.GridController.getData(userID: Long)
GET  /setUser/:userID                                                           org.clulab.grids.webapp.controllers.GridController.getSetUser(userID: Long)
GET  /loadTrainingGrid/:userID                                                  org.clulab.grids.webapp.controllers.GridController.getLoadTrainingGrid(userID: Long)
GET  /loadCurationGrid/:userID                                                  org.clulab.grids.webapp.controllers.GridController.getLoadCurationGrid(userID: Long)
GET  /loadTestGrid/:userID                                                      org.clulab.grids.webapp.controllers.GridController.getLoadTestGrid(userID: Long)
GET  /loadNewGrid/:newAnchor/:userID                                            org.clulab.grids.webapp.controllers.GridController.getLoadNewGrid(newAnchor: String, userID: Long)
GET  /updateAnchorBook/:key/:value/:addOrRemove/:userID                         org.clulab.grids.webapp.controllers.GridController.getUpdateAnchorBook(key: String, value: String, addOrRemove: String, userID: Long)
GET  /drag/:row/:col/:hexSent/:userID                                           org.clulab.grids.webapp.controllers.GridController.getDrag(row: String, col: String, hexSent: String, userID: Long)
GET  /click/:row/:col/:edit/:userID                                             org.clulab.grids.webapp.controllers.GridController.getClick(row: String, col: String, edit: Boolean, userID: Long)
GET  /sentenceClick/:hexText/:userID                                            org.clulab.grids.webapp.controllers.GridController.getSentenceClick(hexText: String, userID: Long)
GET  /editName/:ix/:newName/:userID                                             org.clulab.grids.webapp.controllers.GridController.getEditName(ix: Int, newName: String, userID: Long)
GET  /deleteFrozenColumn/:ix/:userID                                            org.clulab.grids.webapp.controllers.GridController.getDeleteFrozenColumn(ix: Int, userID: Long)
GET  /textInput/:text/:userID                                                   org.clulab.grids.webapp.controllers.GridController.getTextInput(text: String, userID: Long)
GET  /setK/:k/:userID                                                           org.clulab.grids.webapp.controllers.GridController.getSetK(k: Int, userID: Long)
GET  /regenerate/:userID                                                        org.clulab.grids.webapp.controllers.GridController.getRegenerate(userID: Long)
GET  /copyToggle/:userID                                                        org.clulab.grids.webapp.controllers.GridController.getCopyToggle(userID: Long)
GET  /saveGrid/:text/:userID                                                    org.clulab.grids.webapp.controllers.GridController.getSaveGrid(text: String, userID: Long)
GET  /loadGrid/:text/:userID                                                    org.clulab.grids.webapp.controllers.GridController.getLoadGrid(text: String, userID: Long)
GET  /trash/:text/:userID                                                       org.clulab.grids.webapp.controllers.GridController.getTrash(text: String, userID: Long)
GET  /toggleTraining/:userID                                                    org.clulab.grids.webapp.controllers.GridController.getToggleTraining(userID: Long)
GET  /answerQuestion/:questionSet/:questionIndex/:hexSelectedAnswerText/:userID org.clulab.grids.webapp.controllers.GridController.getAnswerQuestion(questionSet: String, questionIndex: Int, hexSelectedAnswerText: String, userID: Long)
GET  /recordAnswers/:questionSet/:userID                                        org.clulab.grids.webapp.controllers.GridController.getRecordAnswers(questionSet: String, userID: Long)
GET  /recordConsent/:userID                                                     org.clulab.grids.webapp.controllers.GridController.getRecordConsent(userID: Long)

# Map static resources from the /public folder to the /assets URL path
GET  /assets/*file controllers.Assets.versioned(path="/public", file: Asset)
GET  /favicon.ico  controllers.Assets.at(path="/public", file="/images/favicon.ico")
